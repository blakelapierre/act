{"version":3,"sources":["vdom.js"],"names":["result","root","name","global","Error","props","children","eval","code","e"],"mappings":";;;;;;kBAAe;AAAA,SACb,gBAAQ;AACN,QAAIA,eAAJ;AAAA,QAAYC,aAAZ;;AAEA,QAAIC,QAAQC,MAAZ,EAAoB,MAAMC,MAASF,IAAT,iBAAN;;AAEpB;AACAC,WAAOD,IAAP,IAAe,UAACA,IAAD,EAAOG,KAAP;AAAA,wCAAiBC,QAAjB;AAAiBA,gBAAjB;AAAA;;AAAA,aAA+BL,OAAQ,EAACC,UAAD,EAAOG,YAAP,EAAcC,kBAAd,EAAvC;AAAA,KAAf;;AAEA,QAAI;AACFN,eAASO,KAAKC,IAAL,KAAc,IAAIJ,KAAJ,CAAU,UAAV,CAAvB,CADE,CAC4C;AAC/C,KAFD,CAGA,OAAOK,CAAP,EAAU;AACR,aAAON,OAAOD,IAAP,CAAP;AACA,YAAMO,CAAN;AACD;;AAED,WAAON,OAAOD,IAAP,CAAP;;AAEA,WAAO,EAACF,cAAD,EAASC,UAAT,EAAP;AACD,GApBY;AAAA,C","file":"vdom.js","sourcesContent":["export default name =>\n  code => {\n    let result, root;\n\n    if (name in global) throw Error(`${name} in global!`);\n\n    //no support for 'dotted' names (nested namespaces)\n    global[name] = (name, props, ...children) => (root = ({name, props, children}));\n\n    try {\n      result = eval(code) || new Error('hold up!'); // jshint ignore:line\n    }\n    catch (e) {\n      delete global[name];\n      throw e;\n    }\n\n    delete global[name];\n\n    return {result, root};\n  }\n;\n"]}